[tool.poetry]
name = "stgctl"
version = "0.5.1"
description = "stage-control"
authors = ["Brodi Elwood <bdelwood@fas.harvard.edu>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/bdelwood/stgctl"
repository = "https://github.com/bdelwood/stgctl"
documentation = "https://stgctl.readthedocs.io"
classifiers = ["Development Status :: 4 - Beta"]

[tool.poetry.urls]
Changelog = "https://github.com/bdelwood/stgctl/releases"

[tool.poetry.dependencies]
python = "^3.11"
pyserial = "^3.5"
loguru = "^0.7.0"
pydantic = { extras = ["dotenv"], version = "^1.10.9" }
numpy = "^1.25.0"
fabric = "^3.1.0"
typer = { extras = ["all"], version = "^0.9.0" }

[tool.poetry.scripts]
stgctl = "stgctl.__main__:main"

[tool.poetry.group.dev.dependencies]
Pygments = ">=2.10.0"
bandit = ">=1.7.4"
coverage = { extras = ["toml"], version = ">=6.2" }
furo = ">=2021.11.12"
mypy = ">=0.930"
pre-commit = ">=2.16.0"
pre-commit-hooks = ">=4.1.0"
pytest = ">=6.2.5"
safety = ">=1.10.3"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=3.0.2"
typeguard = ">=2.13.3"
xdoctest = { extras = ["colors"], version = ">=0.15.10" }
myst-parser = { version = ">=0.16.1" }
pytest-mock = "^3.11.1"
ruff = "~0.1.0"
darglint2 = "^1.8.2"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["stgctl", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py39"
ignore = ["E501", "E203", "B008", "D106", "B006", "D105"]
line-length = 88
select = ["UP", "B", "B9", "C", "D", "E", "F", "N", "W", "I001", "C4"]
exclude = [".venv"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "D103", "D415", "E402", "S105"]


[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.pydocstyle]
convention = "google"
